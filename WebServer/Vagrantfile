# -*- mode: ruby -*-
# vi: set ft=ruby :

$ip_file = "db_ip.txt"

Vagrant.configure("2") do |config|
  config.vm.box = 'digital_ocean'
  config.vm.box_url = "https://github.com/devopsgroup-io/vagrant-digitalocean/raw/master/box/digital_ocean.box"
  config.ssh.private_key_path = '~/.ssh/id_rsa'
  config.vm.synced_folder ".", "/vagrant", type: "rsync"

  config.vm.define "dbserver", primary: true do |server|
    server.vm.provider :digital_ocean do |provider|
      provider.ssh_key_name = ENV["SSH_KEY_NAME"]
      provider.token = ENV["DIGITAL_OCEAN_TOKEN"]
      provider.image = 'ubuntu-24-04-x64'
      provider.region = 'fra1'
      provider.size = 's-2vcpu-4gb'
      provider.privatenetworking = true
    end

    server.vm.hostname = "dbserver"

    server.vm.provision "shell", inline: <<-SHELL
      echo "Sleeping to avoid locks"
      sleep 30
    SHELL

    server.trigger.after :up do |trigger|
      trigger.info = "Writing dbserver's IP to file..."
      trigger.ruby do |env, machine|
        remote_ip = machine.instance_variable_get(:@communicator).instance_variable_get(:@connection_ssh_info)[:host]
        File.write($ip_file, remote_ip)
      end
    end

    server.vm.provision "shell", inline: <<-SHELL
      echo "Updating package lists and installing Docker..."
      sudo apt-get update -y
      sudo apt-get install -y docker.io docker-compose
      sudo systemctl enable docker
      sudo systemctl start docker
      sudo usermod -aG docker $USER

      echo "Docker setup completed. PostgreSQL will be deployed via Docker Compose."
    SHELL
  end


  config.vm.define "webserver", primary: false do |server|
    server.vm.provider :digital_ocean do |provider|
      provider.ssh_key_name = ENV["SSH_KEY_NAME"]
      provider.token = ENV["DIGITAL_OCEAN_TOKEN"]
      provider.image = 'ubuntu-24-04-x64'
      provider.region = 'fra1'
      provider.size = 's-1vcpu-2gb'
      provider.privatenetworking = true
    end

    server.vm.hostname = "webserver"

    server.vm.provision "shell", inline: <<-SHELL
      echo "Sleeping to avoid locks"
      sleep 30
    SHELL

    server.trigger.before :up do |trigger|
      trigger.info = "Waiting to create server until dbserver's IP is available."
      trigger.ruby do |env, machine|
        while !File.file?($ip_file) do
          sleep(1)
        end
        db_ip = File.read($ip_file).strip()
        puts "Now, I have it..."
        puts db_ip
      end
    end

    server.vm.provision "shell", inline: <<-SHELL
      export DB_IP=`cat /vagrant/db_ip.txt`
      echo "Updating package lists and installing Docker..."
      sudo apt-get update -y
      sudo apt-get install -y docker.io docker-compose
      sudo systemctl enable docker
      sudo systemctl start docker
      sudo usermod -aG docker $USER

      echo "Docker setup completed. PostgreSQL will be deployed via Docker Compose."

      echo "================================================================="
      echo "=                            DONE                               ="
      echo "================================================================="
      echo "Navigate in your browser to:"
      THIS_IP=`hostname -I | cut -d" " -f1`
      echo "http://${THIS_IP}:5000"
    SHELL
  end

  # config.vm.provision "shell", privileged: false, inline: <<-SHELL
  #   sudo apt-get update -y
  # SHELL
end