name: Docker Image CI

on:
  push:
    branches:
      - develop
    # paths:
    #   - WebServer/**

jobs:
  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Install .NET SDK
  #       run: |
  #         sudo add-apt-repository ppa:dotnet/backports
  #         sudo apt-get update -y
  #         sudo apt-get install -y dotnet-sdk-9.0

  #     - name: Publish WebServer
  #       run: dotnet publish WebServer/MiniTwit.csproj -c Release -o WebServer/publish

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_TOKEN }}

  #     - name: Build Docker image
  #       run: docker build WebServer --file WebServer/Dockerfile --tag alexlerche/itu_minitwit:latest

  #     - name: Push Docker image
  #       run: docker push alexlerche/itu_minitwit:latest

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Deploy to DigitalOcean via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DIGITALOCEAN_HOST_WEBSERVER }}
          username: ${{ secrets.DIGITALOCEAN_USER }}
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          script: |
            mkdir -p /app
            cd /app
            rm -f docker-compose.yml
            curl -o docker-compose.yml https://raw.githubusercontent.com/CloudMorphers/minitwit/develop/WebServer/docker-compose.yml

            # ðŸ”‘ Log in to Docker Hub before pulling the image
            echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            # Pull and start the service
            docker-compose pull
            docker-compose up -d
            docker image prune -f
