name: Docker Image CI

on:
  push:
    branches:
      - main
    paths:
      - WebServer/**

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install .NET SDK
        run: |
          sudo add-apt-repository ppa:dotnet/backports
          sudo apt-get update -y
          sudo apt-get install -y dotnet-sdk-9.0

      - name: Publish WebServer
        run: dotnet publish WebServer/MiniTwit.csproj -c Release -o WebServer/publish

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker image
        run: docker build WebServer --file WebServer/Dockerfile --tag alexlerche/itu_minitwit:latest

      - name: Push Docker image
        run: docker push alexlerche/itu_minitwit:latest
# deploy:
#   runs-on: ubuntu-latest
#   needs: build # Ensures deploy runs after build
#   steps:
#     - name: Deploy to DigitalOcean via SSH
#       uses: appleboy/ssh-action@master
#       with:
#         host: ${{ secrets.DIGITALOCEAN_HOST }}
#         username: ${{ secrets.DIGITALOCEAN_USER }}
#         key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
#         script: |
#           cd /path/to/your/app
#           docker-compose pull
#           docker-compose up -d
#           docker image prune -f  # Optional: clean up unused images
#   deploy:
#       runs-on: ubuntu-latest
#       needs: build  # Ensures deploy runs after build
#       steps:
#       - name: Deploy to DigitalOcean via SSH
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.DIGITALOCEAN_HOST }}
#           username: ${{ secrets.DIGITALOCEAN_USER }}
#           key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
#           script: |
#             echo "Attempting to pull the latest Docker image..."
#             for i in {1..5}; do
#               if docker pull alexlerche/itu_minitwit:latest; then
#                 echo "Docker image pulled successfully."
#                 break
#               else
#                 echo "Docker image not available yet. Retrying in 10 seconds..."
#                 sleep 10
#               fi
#             done

#             echo "Recreating containers with the latest image..."
#             docker-compose up -d

#             echo "Cleaning up unused Docker images..."
#             docker image prune -f
